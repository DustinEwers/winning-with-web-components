/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {
  interface HTMLAppCardElement extends HTMLStencilElement {
    'title': string;
  }
  var HTMLAppCardElement: {
    prototype: HTMLAppCardElement;
    new (): HTMLAppCardElement;
  };
  interface HTMLElementTagNameMap {
    'app-card': HTMLAppCardElement;
  }
  interface ElementTagNameMap {
    'app-card': HTMLAppCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-card': JSXElements.AppCardAttributes;
    }
  }
  namespace JSXElements {
    export interface AppCardAttributes extends HTMLAttributes {
      'title'?: string;
    }
  }
}


declare global {
  interface HTMLAppCounterCardElement extends HTMLStencilElement {

  }
  var HTMLAppCounterCardElement: {
    prototype: HTMLAppCounterCardElement;
    new (): HTMLAppCounterCardElement;
  };
  interface HTMLElementTagNameMap {
    'app-counter-card': HTMLAppCounterCardElement;
  }
  interface ElementTagNameMap {
    'app-counter-card': HTMLAppCounterCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-counter-card': JSXElements.AppCounterCardAttributes;
    }
  }
  namespace JSXElements {
    export interface AppCounterCardAttributes extends HTMLAttributes {
      'onCountChanged'?: (event: CustomEvent) => void;
    }
  }
}


declare global {
  interface HTMLAppFieldElement extends HTMLStencilElement {
    'id': string;
    'label': string;
    'type': string;
  }
  var HTMLAppFieldElement: {
    prototype: HTMLAppFieldElement;
    new (): HTMLAppFieldElement;
  };
  interface HTMLElementTagNameMap {
    'app-field': HTMLAppFieldElement;
  }
  interface ElementTagNameMap {
    'app-field': HTMLAppFieldElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-field': JSXElements.AppFieldAttributes;
    }
  }
  namespace JSXElements {
    export interface AppFieldAttributes extends HTMLAttributes {
      'id'?: string;
      'label'?: string;
      'type'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
